{"name": "test_2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: d:\\python\\lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome --output json.\nrequest or response body error: operation timed out\n; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location", "trace": "service = <selenium.webdriver.chrome.service.Service object at 0x000002EF15B3D9C8>, options = <selenium.webdriver.chrome.options.Options object at 0x000002EF15B3DC08>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = shutil.which(service.path)\n        try:\n>           path = SeleniumManager().driver_location(options) if path is None else path\n\nd:\\python\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.common.selenium_manager.SeleniumManager object at 0x000002EF15B3DF48>\noptions = <selenium.webdriver.chrome.options.Options object at 0x000002EF15B3DC08>\n\n    def driver_location(self, options: BaseOptions) -> str:\n        \"\"\"\n        Determines the path of the correct driver.\n        :Args:\n         - browser: which browser to get the driver path for.\n        :Returns: The driver path to use\n        \"\"\"\n    \n        logger.debug(\"Applicable driver not found; attempting to install with Selenium Manager (Beta)\")\n    \n        browser = options.capabilities[\"browserName\"]\n    \n        args = [str(self.get_binary()), \"--browser\", browser, \"--output\", \"json\"]\n    \n        if options.browser_version:\n            args.append(\"--browser-version\")\n            args.append(str(options.browser_version))\n    \n        binary_location = getattr(options, \"binary_location\", None)\n        if binary_location:\n            args.append(\"--browser-path\")\n            args.append(str(binary_location))\n    \n        proxy = options.proxy\n        if proxy and (proxy.http_proxy or proxy.ssl_proxy):\n            args.append(\"--proxy\")\n            value = proxy.ssl_proxy if proxy.sslProxy else proxy.http_proxy\n            args.append(value)\n    \n        if logger.getEffectiveLevel() == logging.DEBUG:\n            args.append(\"--debug\")\n    \n>       result = self.run(args)\n\nd:\\python\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = ['d:\\\\python\\\\lib\\\\site-packages\\\\selenium\\\\webdriver\\\\common\\\\windows\\\\selenium-manager.exe', '--browser', 'chrome', '--output', 'json']\n\n    @staticmethod\n    def run(args: List[str]) -> str:\n        \"\"\"\n        Executes the Selenium Manager Binary.\n        :Args:\n         - args: the components of the command being executed.\n        :Returns: The log string containing the driver location.\n        \"\"\"\n        command = \" \".join(args)\n        logger.debug(f\"Executing process: {command}\")\n        try:\n            completed_proc = subprocess.run(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n            stdout = completed_proc.stdout.decode(\"utf-8\").rstrip(\"\\n\")\n            stderr = completed_proc.stderr.decode(\"utf-8\").rstrip(\"\\n\")\n            output = json.loads(stdout)\n            result = output[\"result\"][\"message\"]\n        except Exception as err:\n            raise WebDriverException(f\"Unsuccessful command executed: {command}; {err}\")\n    \n        if completed_proc.returncode:\n>           raise WebDriverException(f\"Unsuccessful command executed: {command}.\\n{result}{stderr}\")\nE           selenium.common.exceptions.WebDriverException: Message: Unsuccessful command executed: d:\\python\\lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome --output json.\nE           request or response body error: operation timed out\n\nd:\\python\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:121: WebDriverException\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture()\n    def access_web():\n        #前置\n>       driver = webdriver.Chrome()\n\nconftest.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nd:\\python\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:47: in __init__\n    self.service.path = DriverFinder.get_path(self.service, self.options)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nservice = <selenium.webdriver.chrome.service.Service object at 0x000002EF15B3D9C8>, options = <selenium.webdriver.chrome.options.Options object at 0x000002EF15B3DC08>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = shutil.which(service.path)\n        try:\n            path = SeleniumManager().driver_location(options) if path is None else path\n        except Exception as err:\n>           raise NoSuchDriverException(f\"Unable to obtain {service.path} using Selenium Manager; {err}\")\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: d:\\python\\lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome --output json.\nE           request or response body error: operation timed out\nE           ; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\nd:\\python\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:44: NoSuchDriverException"}, "start": 1688570285436, "stop": 1688570285436, "uuid": "be55e3d8-f1bf-4f03-9306-7c4caabe122d", "historyId": "d6be2571ce4d6283f58753e287014425", "testCaseId": "d6be2571ce4d6283f58753e287014425", "fullName": "test_case.test_cast.Testcase#test_2", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('access_web')"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_cast"}, {"name": "subSuite", "value": "Testcase"}, {"name": "host", "value": "DESKTOP-4U9SKRD"}, {"name": "thread", "value": "13160-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_cast"}]}